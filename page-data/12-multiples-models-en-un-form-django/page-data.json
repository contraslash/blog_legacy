{"componentChunkName":"component---src-templates-blog-post-js","path":"/12-multiples-models-en-un-form-django/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"0ff00ce0-b2bb-5390-bd01-253125271132","excerpt":"Multiples Models en un Form Django Dando mis primeros pasos en django, me encontré con el ligero problema de no saber como subir datos a varios modelos desde…","html":"<h1>Multiples Models en un Form Django</h1>\n<p>Dando mis primeros pasos en django, me encontré con el ligero problema de no saber como subir datos a varios modelos desde una sola vista, bueno inicialmente me di cuenta que en un template view puedo hacer algo como </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class MiTemplateView(TemplateView):\n    template_name=&#39;ruta/al/template&#39;\n    formulario1=MiFormulario1(prefix=&#39;formulario1&#39;)\n    formulario2=MiFormulario1(prefix=&#39;formulario2&#39;)\n... etc</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def get_context_data(self, **kwargs):  \n    context=super(SubirMaterial, self).get_context_data(**kwargs)  \n    if &#39;formulario1&#39; not in context:  \n    context[&#39;formulario1&#39;]=self.formulario1  \n    if &#39;formulario2&#39; not in context:  \n        context[&#39;formulario2&#39;]=self.formulario2  \n    ... etc  \n    return context </code></pre></div>\n<p> Y ya con eso tengo los forms en el template, en el template es tan facil como</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;form enctype=&quot;multipart/form-data&quot; method=&quot;POST&quot;&gt;\n    {% csrf_token %}  \n    {{formulario1.as_p}}  \n    {{formulario2.as_p}}  \n    …etc\n&lt;/form&gt;</code></pre></div>\n<p> Y ahora solo escribo el post</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def post(self, request, *args, **kwargs):\n    formulario1=MiFormulario1(request.POST, prefix=’formulario1?)  \n    formulario2=MiFormulario2(request.POST, prefix=’formulario2?)  \n    … etc  \n    if formulario1.is_valid():  \n        formulario1.save()  \n    if formulario2.is_valid():  \n        formulario2.save()  \n    …etc</code></pre></div>\n<p>Ahora puede que algunos formularios requieran algunas Llaves Foraneas, digamos es el caso de formulario1 y formulario2, tan facil como</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    id_formulario1=formulario1.save()  \n    elemento_modelo_formulario2=formulario2.save(commit=False)  \n    elemento_modelo_formulario2.llaveForaneaFormulario1 = id_formulario1  \n    formulario2.save()</code></pre></div>\n<p>Y ét violá, ojalá algún día aprenda bastante de django y me de cuenta como hacerlo mas elegantemente</p>","frontmatter":{"title":"Multiples Models en un Form Django","date":"January 29, 2016","description":""}}},"pageContext":{"slug":"/12-multiples-models-en-un-form-django/","previous":{"fields":{"slug":"/13-probando-yo-con-angularjs/"},"frontmatter":{"title":"Probando YO con AngularJS"}},"next":{"fields":{"slug":"/11-problemas-con-el-mod_rewrite-en-virtualhost/"},"frontmatter":{"title":"Problemas con el mod_rewrite en VirtualHost"}}}}}