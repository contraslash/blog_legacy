{"componentChunkName":"component---src-templates-blog-post-js","path":"/148-instalando-y-configurando-drone-05-en-ubuntu-1404/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"90c504ff-1b1a-5d82-acca-bf26c7624e65","excerpt":"Instalando y Configurando Drone 0.5 en Ubuntu 14.04 Hace tiempo cree la versión 1 de este tutorial, pero con el lanzamiento de drone 0.5, muchas cosas cambiaron…","html":"<h1>Instalando y Configurando Drone 0.5 en Ubuntu 14.04</h1>\n<p>Hace tiempo cree la versión 1 de este tutorial, pero con el lanzamiento de drone 0.5, muchas cosas cambiaron, así que tomaré lo relevante de ese post con las nuevas configuraciones necesarias.</p>\n<p>Usaremos para este tutorial <a href=\"http://gogs.io\">Gogs</a> un servidor de git muy liviano y escrito en Go y MySQL.</p>\n<p>Debemos instalar primero Docker, si no lo has hecho, revisa este <a href=\"http://blog.contraslash.com/instalando-docker-en-ubuntu-1404/\">post</a></p>\n<p>Para instalar gogs, revisa <a href=\"http://blog.contraslash.com/instalando-gogs-en-ubuntu-1404-con-apache/\">este tutorial</a></p>\n<p>Ejecuta el siguiente SQL en tu servidor de Base de Datos</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">create database drone;\ncreate user drone_user identified by &#39;Ultr4$#cUr!Pa$$&#39;\ngrant all privileges on drone.* to drone_user;\nflush privileges;</code></pre></div>\n<p>Seguido usamos docker para obtener la última imagen de drone</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker pull drone/drone:latest</code></pre></div>\n<p>Creamos un archivo de configuración para drone</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir -p /etc/drone\ncd /etc/drone</code></pre></div>\n<h3>Servidor Drone</h3>\n<p>Se encargará de servir la interfaz web y conectarse con los servidores git.</p>\n<p>Creamos un archivo <em>dronerc</em> y escribimos lo siguiente con la configuración.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DATABASE_DRIVER=mysql\nDATABASE_CONFIG=drone_user:Ultr4$#cUr!Pa$$@tcp(localhost:3306)/drone?parseTime=true\n\nDRONE_OPEN=true\nDRONE_SECRET=Rgwcg#632155DF3fswr\nDRONE_GOGS=true\nDRONE_GOGS_URL=http://gogs.example.com</code></pre></div>\n<blockquote>\n<p>Recuerda colocar la URL apropiada de tu servidor Gogs</p>\n</blockquote>\n<p>por último ejecutamos el siguiente comando</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker run \\\n    --volume /var/lib/drone:/var/lib/drone \\\n    --volume /var/run/docker.sock:/var/run/docker.sock \\\n    --env-file /etc/drone/dronerc \\\n    --restart=always \\\n    --publish=3001:8000 \\\n    --detach=true \\\n    --name=drone \\\n    drone/drone:latest</code></pre></div>\n<h3>Agente Drone</h3>\n<p>Se encargará de la construcción de instancias para pruebas y ejecución de flujos de trabajo</p>\n<p>Creamos un archivo <em>droneagentrc</em> y escribimos lo siguiente con la configuración.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DRONE_SERVER=ws://ci.contraslash.com/ws/broker\nDRONE_SECRET=Rgwcg#632155DF3fswr</code></pre></div>\n<blockquote>\n<p>Recuerda que <code class=\"language-text\">DRONE_SECRET</code> de <em>droneagentrc</em>  debe concordar con el <code class=\"language-text\">DRONE_SECRET</code> de <em>dronerc</em> .</p>\n</blockquote>\n<p>Ejecutamos la instancia de docker para el agente</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run -d \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --env-file /etc/drone/droneagentrc \\\n  --restart=always \\\n  --name=drone-agent \\\n  drone/drone:0.5 agent</code></pre></div>\n<h3>Configuración de apache como proxy inverso</h3>\n<p>Por último usaremos apache como proxy inverso para nuestra aplicación, para ello crearemos un archivo de virtual host en <em>/etc/apache2/sites-available</em> llamado <em>drone.example.com.conf</em> con la siguiente información</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;VirtualHost *:80&gt;\n        ServerName ci.contraslash.com\n    ServerAdmin ma0@contraslash.com\n        #git lab passthrough\n        ProxyPass         /ws/ ws://localhost:3001/ws/\n    ProxyPassReverse /ws/ ws://localhost:3001/ws/\n        ProxyPass         / http://localhost:3001/\n        ProxyPassReverse  / http://localhost:3001/\n&lt;/VirtualHost&gt;</code></pre></div>\n<p>Ahora necesitaremos habilitar los siguientes módulos de apache</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a2enmod proxy\na2enmod proxy_wstunnel</code></pre></div>\n<p>Habilitamos el sitio y reiniciamos apache</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a2ensite drone.example.com\nservice apache2 restart</code></pre></div>\n<p>Después de esto serías capaz de ingresar con las credenciales de gogs en drone. </p>\n<p>Recuerda que necesitas en tu repositorio un archivo <em>.drone.yml</em>.</p>\n<p>Un excelente ejemplo de esto con django se puede encontrar en <a href=\"https://codeandoando.com/integrar-django-con-droneio/\">este post</a></p>","frontmatter":{"title":"Instalando y Configurando Drone 0.5 en Ubuntu 14.04","date":"February 07, 2017","description":"Instalando y configurando Drone.io, un servidor de integración continua, con Gogs.io, un servidor de git, Docker, Apache como proxy inverso en Ubuntu 14.04"}}},"pageContext":{"slug":"/148-instalando-y-configurando-drone-05-en-ubuntu-1404/","previous":{"fields":{"slug":"/147-un-jarvis-simple-en-python/"},"frontmatter":{"title":"Un jarvis simple en Python"}},"next":{"fields":{"slug":"/149-django-unicodeencodeerror-ascii/"},"frontmatter":{"title":"Django UnicodeEncodeError ‘ascii’"}}}}}