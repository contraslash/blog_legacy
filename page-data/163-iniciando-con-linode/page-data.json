{"componentChunkName":"component---src-templates-blog-post-js","path":"/163-iniciando-con-linode/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"88d750e2-663e-5f05-ad94-1695c3204fba","excerpt":"Iniciando con Linode Cuando finalmente tomé la decisión de cambiarme de lleno a la arquitectura contenedores, decidí echarle un vistazo a mi infraestructura…","html":"<h1>Iniciando con Linode</h1>\n<p>Cuando finalmente tomé la decisión de cambiarme de lleno a la arquitectura contenedores, decidí echarle un vistazo a mi infraestructura. Hasta el momento he sido un fiel cliente de Digital Ocean, pero tras un percance épico con uno de mis servidores favoritos que lo dejó totalmente inutilizado para usar Docker, decidí considerar otras opciones.</p>\n<p>Este es el estado de cambio utilizando Linode.</p>\n<p>¿Porqué Linode? </p>\n<p>Cuesta la mitad que Digital Ocean, lo digo hoy 31 de Marzo de 2017</p>\n<p>Aprovisionando un nuevo Ubuntu 16:04</p>\n<h3>Deshabilitar ip v6</h3>\n<p>Si, tuve que deshabilitarla para poder trabajar con mas tranquilidad</p>\n<p>Pegar esto al final de <code class=\"language-text\">/etc/sysctl.conf</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">net.ipv6.conf.all.disable_ipv6 = 1\nnet.ipv6.conf.default.disable_ipv6 = 1 \nnet.ipv6.conf.lo.disable_ipv6 = 1 </code></pre></div>\n<p>y luego </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo sysctl -p</code></pre></div>\n<p>Para verificar </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat /proc/sys/net/ipv6/conf/all/disable_ipv6 </code></pre></div>\n<p>Si la respuesta es 1 todo va bien</p>\n<h3>Instalar docker</h3>\n<p>Asegurarse de no utilizar un kernel personalizado de linode.</p>\n<p>Revisar <a href=\"https://www.linode.com/docs/tools-reference/custom-kernels-distros/run-a-distribution-supplied-kernel-with-kvm\">este post</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-get install \\\n    linux-image-extra-$(uname -r) \\\n    linux-image-extra-virtual\n\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\nsudo add-apt-repository \\\n   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable&quot;\n\nsudo apt-get update\n\nsudo apt-get install docker-ce</code></pre></div>\n<h3>Creando y configurando el Swarm</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker swarm init\n\ndocker network create --driver=overlay traefik-network</code></pre></div>\n<h3>Creando y configurando traefik</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker service create \\\n    --name traefik \\\n    --constraint=node.role==manager \\\n    --publish 80:80 --publish 8080:8080 \\\n    --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \\\n    --network traefik-network \\\n    traefik \\\n    --docker \\\n    --docker.swarmmode \\\n    --docker.domain=example.com \\\n    --docker.watch \\\n    --web</code></pre></div>\n<h3>Probando un cliente de apache2</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker service create \\\n    --name apache2 \\\n    --label traefik.port=80 \\\n    --network traefik-network \\\n    httpd</code></pre></div>\n<blockquote>\n<p>Para ayudar en la resolución de direcciones IPv4 es util habilitar el tcp<em>mtu</em>probing añadiendo la línea</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">net.ipv4.tcp_mtu_probing=1</code></pre></div>\n<p>a <code class=\"language-text\">/etc/sysctl.con</code> y luego ejecutando el comando</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo sysctl -p</code></pre></div>","frontmatter":{"title":"Iniciando con Linode","date":"March 31, 2017","description":"Provisionando un Docker Swarn en Linode"}}},"pageContext":{"slug":"/163-iniciando-con-linode/","previous":{"fields":{"slug":"/162-okr/"},"frontmatter":{"title":"OKR"}},"next":{"fields":{"slug":"/164-cors-en-django/"},"frontmatter":{"title":"CORS en Django"}}}}}