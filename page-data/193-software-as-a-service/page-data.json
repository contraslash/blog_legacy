{"componentChunkName":"component---src-templates-blog-post-js","path":"/193-software-as-a-service/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"b1f0abdb-1dae-5f9e-ab7b-aa42c2d34a4e","excerpt":"Software as a Service El SaaS es un respiro que tiene la industria del software cuando el mercado estaba saturado y la adquisición de nuevos clientes era muy…","html":"<h1>Software as a Service</h1>\n<p>El SaaS es un respiro que tiene la industria del software cuando el mercado estaba saturado y la adquisición de nuevos clientes era muy costoso.</p>\n<h2>Qué es SaaS</h2>\n<p>Es un modelo en el cual se ofrecen aplicaciones que funcionan en la nube, bajo la modalidad de servicio, y para su acceso se requiere un navegador o cliente especializado a través de internet.</p>\n<p>Es un modelo que proporciona acceso remoto a las aplicaciones como un servicio basado en la web. El servicio de software se paga en cuotas mensuales y pagar por lo que se contrata o lo que se consume.</p>\n<h2>Cloud Computing</h2>\n<p>Es un modelo para habilitar recursos computacionales compartidos de una manera ubicua, conveniente y bajo demanda, que pueden ser rápidamente aprovisionados y desplegados con un esfuerzo de manejo mínimo o interacción del proveedor.</p>\n<h3>Características</h3>\n<ul>\n<li>Acceso ubicuo por las redes</li>\n<li>Recursos compartidos</li>\n<li>Rápida elasticidad</li>\n<li>Servicios medibles</li>\n<li>Autoservicio</li>\n</ul>\n<h3>Modelos de entrega</h3>\n<ul>\n<li>Nubes públicas</li>\n<li>Nubes privadas</li>\n<li>Nubes Híbrida</li>\n</ul>\n<h3>Modelos de servicio</h3>\n<ul>\n<li>Infraestructura como servicio (IaaS)</li>\n<li>Plataforma como servicio (PaaS)</li>\n<li>Software como servicio (SaaS)</li>\n</ul>\n<h3>Por qué usar computación en la nube</h3>\n<p>La computacieon en nube es vista como una solucón integral en la cual todos los recursos informáticos o computacionales son brindados de manera rápida y según lo determina la demanda.</p>\n<p>La computación en nube permite a los consumidores y a las empresas, usar aplicaciones de negocios comunes en línea, sin necesidad de instalar software en sus equipos, usando un navegador web.</p>\n<p>Esta tecnología permite un estilo de gestión de recursos informáticos más eficiente mediante la centralización del almacenamiento, memoria de los equipos, Procesamiento y ancho de banda, entre otros.</p>\n<h3>Características</h3>\n<ul>\n<li>Integración probada con los servicios web</li>\n<li>Prestación de servicios de talla mundial</li>\n<li>No se requiere instalar software o Hardware</li>\n<li>Implementación más rápida y con menos riesgos</li>\n<li>Gran capacidad de personalización</li>\n<li>Más opciones para usuarios comerciales</li>\n<li>Actualizaciones automáticas</li>\n</ul>\n<h3>Promesas de SaaS</h3>\n<ul>\n<li>Se requieren inversiones bajas para usar las aplicaciones</li>\n<li>Se evitan los problemas de soporte o mantenimiento</li>\n<li>Curvas de aprendizaje cortas</li>\n<li>Software siempre actualizado</li>\n<li>Software por subscripción</li>\n</ul>\n<h3>Arquitectura multitenant</h3>\n<p>Todos los usuarios las aplicaciones comparten una infraestructura común y el código de aplicación es mantenido de manera centralizada. Además una instancia sirve a muchos clientes de una o varias organizaciones, lo cual evita tener que mantener múltiples versiones de la misma aplicación. Cuando se desea separar la aplicación se mantiene la misma aplicación en diferentes máquinas virtuales.</p>\n<h3>Adecuado nivel de personalización</h3>\n<p>La habilidad de que cada usuario personalice fácilmente su aplicación de tal manera que se adapte a su proceso de negocio sin afectar su infraestructura</p>\n<h2>Aspectos a tener en cuenta para crear aplicaciones tipo SaaS</h2>\n<p>Primero se debe entender que vamos a migrar de un esquema Software as a Product (SaaP) a un modelo Software como Servicio (SaaS)</p>\n<p>En el modelo SaaP, cada cliente ejecuta su propia instancia de la aplicación, normalmente en su propio datacenter; en SaaS, se comparte una copia de aplicación por todos los clientes.</p>\n<p>El modelo SaaS Tiene 3 pilares:</p>\n<ul>\n<li>\n<p>Modelo de Negocio: </p>\n<ul>\n<li>Cambio de modelo de venta por servicio</li>\n<li>Reducción de costos mediante la especializaición y economía de escala. Todo se reduce al mínimo rentable</li>\n<li>Funcionalidades de comercio electrónico</li>\n<li>\n<p>Formas de Pago:</p>\n<ul>\n<li>Por usuarios</li>\n<li>Por funcionalidad</li>\n<li>Tarifa Plana</li>\n<li>Por uso</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Estructura Operacional:</p>\n<ul>\n<li>\n<p>Se refiere todo el proceso de gestión que es operada por tercernos, incluye aspectos como:</p>\n<ul>\n<li>El proveedor es responsable de mantener el software funcionando</li>\n<li>Uso de IaaS</li>\n<li>Adoptar un enfoque DevOps</li>\n<li>Stop and Rn</li>\n<li>Monitoreo</li>\n<li>Gestión de políticas</li>\n<li>Mesas de ayuda</li>\n<li>Confiabilidad</li>\n<li>Auditoría</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Arquitectura de la aplicación:</p>\n<ul>\n<li>Se define si la aplicación será single tenant o multi tenant</li>\n</ul>\n</li>\n</ul>\n<h4>Ventajas y desventajas</h4>\n<table>\n<thead>\n<tr>\n<th>-</th>\n<th>Single Tenant</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Dificultad de la implementación</td>\n<td>Baja</td>\n</tr>\n<tr>\n<td>Personalización</td>\n<td>Alta</td>\n</tr>\n<tr>\n<td>Administración requerida</td>\n<td>Alta</td>\n</tr>\n<tr>\n<td>Costos a largo plazo</td>\n<td>Altos</td>\n</tr>\n</tbody>\n</table>\n<h3>Niveles de multi tenant</h3>\n<ul>\n<li>Nivel 1: Propósito específico: Cada cliente tiene su propia instancia de la base de datos y cada instancia puede ser configurable</li>\n<li>Nivel 2: Cada cliente tiene su propia instancia, pero esa instancia es idéntica a los demás</li>\n<li>Nivel 3: Existe una sola instancia de la base de datos</li>\n<li>Nivel 4: Se tiene un balanceador de tenants y cada tenant es idéntico e independiente</li>\n</ul>\n<h2>Aspectos a tener en cuenta:</h2>\n<ul>\n<li>¿Su aplicación debe ser sigle-tenant o multi-tenant? </li>\n<li>¿Cómo lograr confiabilidad y escalabilidad, tanto en un único centro de datos como en múltiples centros de datos? </li>\n<li>¿Cómo manejar la seguridad, incluyendo la identidad y el control de acceso?</li>\n<li>¿Cuánta personalización su aplicación debe permitir y cómo debe proporcionar esa personalización? </li>\n<li>¿Costos de operación de Single-Tenant Vs Multi-Tenant? </li>\n<li>¿Qué métricas debe seguir su aplicación, junto con cómo debe almacenar y procesar esta información? </li>\n<li>¿Qué diseño operacional adopta para su aplicación y qué debe proporcionar la aplicación para un equipo de DevOps?.</li>\n</ul>\n<h2>Conclusiones</h2>\n<ul>\n<li>Las aplicaciones de software como servicio (SaaS) se han convertido definitivamente en la corriente principal incluso entre las empresas.</li>\n<li>Sin embargo, el desarrollo de una gran aplicación SaaS no es trivial. Requiere una sólida comprensión de multi-tenancy, configurabilidad, seguridad, partición con el fin de construir una aplicación SaaS que se pueda utilizar para servir a diferentes tipos de clientes.</li>\n<li>Ahorros significativos a través de SaaS SaaS “virtualizado” con múltiples tenants es el siguiente paso en una arquitectura moderna, eficiente, rentable y flexible que puede funcionar en cualquier dispositivo</li>\n</ul>","frontmatter":{"title":"Software as a Service","date":"March 23, 2018","description":"Notas de clase de la asignatura Tendencias en Ingeniería de Software"}}},"pageContext":{"slug":"/193-software-as-a-service/","previous":{"fields":{"slug":"/192-mas-practicas-agiles/"},"frontmatter":{"title":"Más prácticas ágiles"}},"next":{"fields":{"slug":"/194-multi-tenancy/"},"frontmatter":{"title":"Multi tenancy"}}}}}