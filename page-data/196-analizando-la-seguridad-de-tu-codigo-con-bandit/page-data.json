{"componentChunkName":"component---src-templates-blog-post-js","path":"/196-analizando-la-seguridad-de-tu-codigo-con-bandit/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"c5bfa948-0e2d-5eb7-a443-12acd50b648c","excerpt":"Analizando la seguridad de tu código con Bandit Continuando con herramientas de análisis de código estático, presentamos Bandit, de OpenStack. El uso es…","html":"<h1>Analizando la seguridad de tu código con Bandit</h1>\n<p>Continuando con herramientas de análisis de código estático, presentamos <a href=\"https://github.com/openstack/bandit\">Bandit</a>, de <a href=\"https://www.openstack.org/\">OpenStack</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">pip <span class=\"token function\">install</span> bandit</code></pre></div>\n<p>El uso es bastante simple</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">bandit -r <span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>Podemos configurar para que solamente nos muestre posibles vulnerabilidades utilizando las banderas <code class=\"language-text\">-lll</code></p>","frontmatter":{"title":"Analizando la seguridad de tu código con Bandit","date":"April 12, 2018","description":"Análisis estático de código Python buscando vulnerabilidades utilizando Bandit de OpenStack"}}},"pageContext":{"slug":"/196-analizando-la-seguridad-de-tu-codigo-con-bandit/","previous":{"fields":{"slug":"/195-radon-analizando-la-complejidad-de-tu-codigo/"},"frontmatter":{"title":"Radon: Analizando la complejidad de tu código"}},"next":{"fields":{"slug":"/197-programacion-concurrente-por-paso-de-mensajes/"},"frontmatter":{"title":"Programación Concurrente por Paso de Mensajes"}}}}}