{"componentChunkName":"component---src-templates-blog-post-js","path":"/53-crf/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"4dbb918b-3a01-5663-9738-d483bdbfeab5","excerpt":"CSRF Exempt en vistas basadas en clases Esto es altamente peligroso, cabe aclarar, porque deja al sitio vulnerable a un xss, pero igual para ambiente de pruebas…","html":"<h1>CSRF Exempt en vistas basadas en clases</h1>\n<p>Esto es altamente peligroso, cabe aclarar, porque deja al sitio vulnerable a un <a href=\"https://es.wikipedia.org/wiki/Cross-site_scripting\">xss</a>, pero igual para ambiente de pruebas es útil</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">from django.views.generic import View\nfrom django.views.decorators.csrf import csrf_exempt\nfrom django.utils.decorators import method_decorator\n\nclass MiVista(View):\n\n    ...\n\n    @method_decorator(csrf_exempt)\n    def dispatch(self, request, *args, **kwargs):\n        return super(MiVista, self).dispatch(request, *args, **kwargs)\n\n        ...</code></pre></div>\n<p>Si lo que están haciendo son peticiones ajax desde un navegador, consideren usar <a href=\"https://docs.djangoproject.com/en/1.7/ref/contrib/csrf/#ajax\">esto</a> </p>\n<p>y si es un api para móviles, en serio, migren a <a href=\"http://www.django-rest-framework.org/\">REST Framework</a></p>","frontmatter":{"title":"CSRF Exempt en vistas basadas en clases","date":"January 29, 2016","description":"Usando el decorador csrf_exempt de Django para permitir POST a una vista basada en clases"}}},"pageContext":{"slug":"/53-crf/","previous":{"fields":{"slug":"/54-tutoriales-utiles/"},"frontmatter":{"title":"Tutoriales utiles"}},"next":{"fields":{"slug":"/52-android-material-tabs/"},"frontmatter":{"title":"Android Material Tabs"}}}}}