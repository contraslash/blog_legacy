{"componentChunkName":"component---src-templates-blog-post-js","path":"/78-creando-locales-con-django/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"595176bf-ed82-5346-b1f1-f49be085527e","excerpt":"Creando Locales con Django Como primera instancia, necesitamos asegurarnos de tener el Middleware en nuestra lista de Middleware en el archivo settings.py Luego…","html":"<h1>Creando Locales con Django</h1>\n<p>Como primera instancia, necesitamos asegurarnos de tener el Middleware en nuestra lista de Middleware en el archivo <em>settings.py</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">MIDDLEWARE_CLASSES = [\n    ...\n    &#39;django.middleware.locale.LocaleMiddleware&#39;,\n]</code></pre></div>\n<p>Luego vamos a nuestra aplicación y creamos una nueva carpeta llamada locales, seguido del comando makemessages de django con el código de lenguaje</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir locale\ndjango-admin makemessages -l &lt;código de lenguaje&gt;</code></pre></div>\n<p>A continuación se crearán un sistema de ficheros de forma &#x3C;códugo de lenguaje>/LC_MESSAGES/django.po</p>\n<p>En el archivo django.po tendremos una archivo que recolecta la información de los tags trans y blocktrans, para que realicemos la traducción.</p>\n<p>Una vez terminada la traducción podremos ejecutar el comando compilemessages</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">django-admin compilemessages</code></pre></div>\n<p>Que creará un archivo <em>.mo</em> con la información de nuestra traducción.</p>\n<p>Por último, para cargar los archivos, creamos la variable LOCALE_PATHS en nuestro archivo <em>settings.py</em> indicando la localización de los archivos de traducción</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">LOCALE_PATHS = [\n    ...\n    &#39;&lt;ruta de la aplicación&gt;/locale&#39;,\n]</code></pre></div>\n<h3>TroubleShooting</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">CommandError: Can&#39;t find msguniq. Make sure you have GNU gettext tools 0.15 or newer installed.</code></pre></div>\n<p>Es necesario instalar maketext, en ubuntu</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-get install gettext</code></pre></div>\n<p>en OSX usando Brew</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install gettext</code></pre></div>\n<p>Además asegurarse de que maketext esté en el path</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export PATH=$PATH:/usr/local/Cellar/gettext/0.19.8.1/bin/</code></pre></div>\n<p>donde 0.19.8.1 es la versión de Make Text</p>","frontmatter":{"title":"Creando Locales con Django","date":"February 16, 2016","description":"Usando el módulo de internacionalización i18n en Django para crear traducciones de cadenas en templates y archivos python"}}},"pageContext":{"slug":"/78-creando-locales-con-django/","previous":{"fields":{"slug":"/77-instalando-gogs-en-ubuntu-1404-con-apache/"},"frontmatter":{"title":"Instalando Gogs en Ubuntu 14.04 con Apache"}},"next":{"fields":{"slug":"/79-ignorar-extensiones-en-git/"},"frontmatter":{"title":"Ignorar extensiones en git"}}}}}