{"componentChunkName":"component---src-templates-blog-post-js","path":"/102-instalando-wordpress-con-ansible/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"577e095d-c954-5ca3-877e-dd85051619af","excerpt":"Instalando Wordpress con Ansible y Ubuntu 16.04 Este tutorial está basado en este tutorial de Digital Ocean Como pre requisito está tener instalado Ansible…","html":"<h1>Instalando Wordpress con Ansible y Ubuntu 16.04</h1>\n<p>Este tutorial está basado en <a href=\"https://www.digitalocean.com/community/tutorials/how-to-automate-installing-wordpress-on-ubuntu-14-04-using-ansible\">este tutorial</a> de Digital Ocean</p>\n<p>Como pre requisito está tener instalado Ansible</p>\n<p>Primero adecuamos el sistema de carpetas</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir wordpress\ncd wordpress\ntouch hosts\ntouch playbook.yml\nmkdir roles\ncd roles</code></pre></div>\n<p>Después inicializamos los roles que usaremos</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ansible-galaxy init apache2\nansible-galaxy init mysql\nansible-galaxy init php\nansible-galaxy init wordpress</code></pre></div>\n<p>Ahora, definimos las tareas para apache dos</p>\n<p>en <em>roles/apache2/tasks/main.yml</em> escribimos</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\n- name: Update apt cache\n  apt: update_cache=yes cache_valid_time=3600\n  sudo: yes\n\n- name: Install required software\n  apt: name={{ item }} state=present\n  sudo: yes\n  with_items:\n    - apache2</code></pre></div>\n<p>en <em>roles/mysql/tasks/main.yml</em> escribimos</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\n- name: Update apt cache\n  apt: update_cache=yes cache_valid_time=3600\n  sudo: yes\n\n- name: Install required software\n  apt: name={{ item }} state=present\n  sudo: yes\n  with_items:\n    - mysql-server\n    - python-mysqldb\n     - libmysqlclient-dev\n- name: Create mysql database\n  mysql_db: name={{ wp_mysql_db }} state=present\n\n- name: Create mysql user\n  mysql_user: \n    name={{ wp_mysql_user }} \n    password={{ wp_mysql_password }} \n    priv={{ wp_mysql_db }}.*:ALL</code></pre></div>\n<p>Con esto se instalará Mysql Server y se creará una base de datos con los nombres definidos en <em>roles/mysql/vars/main.yml</em></p>\n<p>Un ejemplo del archivo <em>roles/mysql/vars/main.yml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\nwp_mysql_db: wordpress\nwp_mysql_user: wordpress\nwp_mysql_password: $upp3rP4$$</code></pre></div>\n<p>en <em>roles/php/tasks/main.yml</em> escribimos</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\n- name: Update apt cache\n  apt: update_cache=yes cache_valid_time=3600\n  sudo: yes\n\n- name: Install required software\n  apt: name={{ item }} state=present\n  sudo: yes\n  with_items:\n    - php7.0-mysql\n    - php7.0\n    - libapache2-mod-php7.0\n    - php7.0-mcrypt\n    - python-mysqldb</code></pre></div>\n<p>en <em>roles/wordpress/tasks/main.yml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\n---\n# tasks file for wordpress\n- name: Download WordPress  \n  get_url: \n      url=https://wordpress.org/latest.tar.gz \n      dest=/tmp/wordpress.tar.gz\n      validate_certs=no\n\n- name: Extract WordPress  \n  unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/html/{{ wordpress_site_name }} copy=no\n  sudo: yes\n\n- name: Update default Apache site\n  sudo: yes\n  template: src=wordpress.conf dest=&quot;/etc/apache2/sites-aviable/{{SITE_NAME}}.conf&quot;\n\n- name: Copy sample config file\n  command: mv /var/www/html/{{ wordpress_site_name }}/wp-config-sample.php /var/www/html/{{ wordpress_site_name }}/wp-config.php creates=/var/www/html/{{ wordpress_site_name }}/wp-config.php\n  sudo: yes\n\n- name: Update WordPress config file\n  lineinfile:\n    dest=/var/www/html/{{ wordpress_site_name }}/wp-config.php\n    regexp=&quot;{{ item.regexp }}&quot;\n    line=&quot;{{ item.line }}&quot;\n  with_items:\n    - {&#39;regexp&#39;: &quot;define\\\\(&#39;DB_NAME&#39;, &#39;(.)+&#39;\\\\);&quot;, &#39;line&#39;: &quot;define(&#39;DB_NAME&#39;, &#39;{{wp_mysql_db}}&#39;);&quot;}        \n    - {&#39;regexp&#39;: &quot;define\\\\(&#39;DB_USER&#39;, &#39;(.)+&#39;\\\\);&quot;, &#39;line&#39;: &quot;define(&#39;DB_USER&#39;, &#39;{{wp_mysql_user}}&#39;);&quot;}        \n    - {&#39;regexp&#39;: &quot;define\\\\(&#39;DB_PASSWORD&#39;, &#39;(.)+&#39;\\\\);&quot;, &#39;line&#39;: &quot;define(&#39;DB_PASSWORD&#39;, &#39;{{wp_mysql_password}}&#39;);&quot;}\n  sudo: yes</code></pre></div>\n<p>Como estamos creando un notify para reiniciar apache, debemos añadir esto a <em>roles/wordpress/handlers/main.yml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\n- name: restart apache\n  service: name=apache2 state=restarted\n  sudo: yes</code></pre></div>\n<p>Apache necesita un archivo de configuración, así que lo incluiremos, usando este template que colocaremos en <em>roles/wordpress/templates/wordpress.conf</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;VirtualHost *:80&gt;\n\n    ServerName {{ wordpress_site_name }}\n    ServerAdmin ma0@contraslash.com\n    DocumentRoot /var/www/html/{{ wordpress_site_name }}\n\n    &lt;Directory /var/www/html/{{ wordpress_site_name }}/&gt;\n        Options -Indexes\n            AllowOverride None\n            Order allow,deny\n            allow from all\n\n        &lt;/Directory&gt;\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n&lt;/VirtualHost&gt;</code></pre></div>\n<p>También necesitamos algunas variables para que se rendericen en los archivos de configuración de apache, así que escribirmos en <em>roles/wordpress/vars/main.yml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\nwp_mysql_db: wordpress\nwp_mysql_user: wordpress\nwp_mysql_password: $upp3rP4$$\nwordpress_site_name: wordpress.example.com</code></pre></div>\n<blockquote>\n<p>Asegúrese de que las contraseñas de este archivo coincidan con las del rol de mysql</p>\n</blockquote>\n<p>Para terminar, modificaremos los archivos creados al inicio del tutorial.</p>\n<p>En <em>hosts</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[webserver]\nwebserver.example.com\n\n[dbserver]\ndbserver.example.com</code></pre></div>\n<blockquote>\n<p>En este archivo puede colocar las direcciones ip de sus servidores web y de bases de datos, recuerde que pueden ser el mismo</p>\n</blockquote>\n<p>y en <em>playbook.yml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- hosts: webserver\n\n  roles:\n    - server\n    - php\n    - wordpress\n\n- hosts: dbserver\n\n  roles:\n    - mysql</code></pre></div>\n<p>Por último para aprovisionar nuestros servidores ejecutamos el siguiente comando</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ansible-playbook -i hosts -u nombreUsuario -s -k playbook.yml </code></pre></div>\n<blockquote>\n<p>Recuerde modificar el nombreUsuario en el comando anterior</p>\n</blockquote>","frontmatter":{"title":"Instalando Wordpress con Ansible y Ubuntu 16.04","date":"September 04, 2016","description":""}}},"pageContext":{"slug":"/102-instalando-wordpress-con-ansible/","previous":{"fields":{"slug":"/101-instalando-y-configurando-droneio-en-ubuntu-1404/"},"frontmatter":{"title":"Instalando y Configurando Drone.io en Ubuntu 14.04"}},"next":{"fields":{"slug":"/103-montar-una-carpeta-compartida-en-ubuntu-1404-con-v/"},"frontmatter":{"title":"Montar una carpeta compartida en Ubuntu 14.04 con Virtualbox"}}}}}