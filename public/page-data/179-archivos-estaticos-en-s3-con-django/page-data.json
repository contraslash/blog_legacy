{"componentChunkName":"component---src-templates-blog-post-js","path":"/179-archivos-estaticos-en-s3-con-django/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"8f16358d-deb5-585e-8eb9-1812f333b822","excerpt":"Archivos estáticos en S3 con Django Debo confesar que tenía una deuda técnica con el blog desde hace un par de meses por no haber traducido oportunamente este…","html":"<h1>Archivos estáticos en S3 con Django</h1>\n<p>Debo confesar que tenía una deuda técnica con el blog desde hace un par de meses por no haber traducido oportunamente <a href=\"https://www.caktusgroup.com/blog/2014/11/10/Using-Amazon-S3-to-store-your-Django-sites-static-and-media-files/\">este post</a>. Afortunadamente aún estamos a tiempo.</p>\n<p>Como primera instancia necesitaremos <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html\">crear un Bucket en S3</a></p>\n<p>Segundo vamos a crear un <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_cliwpsapi\">usuario en IAM</a>, recordemos que necesitaremos un API KEY y un API SECRET, por tanto debemos crear un <code class=\"language-text\">acceso programático</code>.</p>\n<blockquote>\n<p>Asegúrate de guardar estos valores en un lugar donde no los pierdas.</p>\n</blockquote>\n<p>Una vez creado tu usuario, obtén el ARN, que debe verse algo como </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">arn:aws:iam::123456789012:user/nombredeusuario</code></pre></div>\n<p>Ahora con este ARN en mente debemos <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/user-guide/add-bucket-policy.html\">editar la política del bucket S3</a> con algo similar a esto.</p>\n<blockquote>\n<p>Recuerda que debes cambiar los valores entre &#x3C;> y que los caracteres &#x3C; y > NO VAN</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;Statement&quot;: [\n        {\n          &quot;Sid&quot;:&quot;PublicReadForGetBucketObjects&quot;,\n          &quot;Effect&quot;:&quot;Allow&quot;,\n          &quot;Principal&quot;: {\n                &quot;AWS&quot;: &quot;*&quot;\n             },\n          &quot;Action&quot;:[&quot;s3:GetObject&quot;],\n          &quot;Resource&quot;:[&quot;arn:aws:s3:::&lt;BUCKET_NAME&gt;/*&quot;\n          ]\n        },\n        {\n            &quot;Action&quot;: &quot;s3:*&quot;,\n            &quot;Effect&quot;: &quot;Allow&quot;,\n            &quot;Resource&quot;: [\n                &quot;arn:aws:s3:::&lt;BUCKET_NAME&gt;&quot;,\n                &quot;arn:aws:s3:::&lt;BUCKET_NAME&gt;/*&quot;\n            ],\n            &quot;Principal&quot;: {\n                &quot;AWS&quot;: [\n                    &quot;&lt;USER_ARN&gt;&quot;\n                ]\n            }\n        }\n    ]\n}</code></pre></div>\n<p>Ahora necesitaremos instalar boto y storages, las librerías que harán la magia de guardado en S3:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pip install django-storages boto</code></pre></div>\n<p>Añadimos <code class=\"language-text\">storages</code> a nuestro <code class=\"language-text\">INSTALLED_APPS</code> en <code class=\"language-text\">settings.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">INSTALLED_APPS = [\n      ...\n      &#39;storages&#39;,\n]</code></pre></div>\n<p>Y al final de nuestro archivo de configuración <code class=\"language-text\">settings.py</code> añadimos las siguientes líneas reemplazando con los valores apropiados </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">AWS_ACCESS_KEY_ID = &#39;&lt;ACCESS_KEY&gt;&#39;\nAWS_SECRET_ACCESS_KEY = &#39;&lt;SECRET_KEY&gt;&#39;\nAWS_STORAGE_BUCKET_NAME = &#39;&lt;NOMBRE_BUCKET&gt;&#39;\nAWS_S3_CUSTOM_DOMAIN = &#39;%s.s3.amazonaws.com&#39; % AWS_STORAGE_BUCKET_NAME\n\nSTATIC_URL = &quot;https://%s/&quot; % AWS_S3_CUSTOM_DOMAIN\n\nSTATICFILES_STORAGE = &#39;storages.backends.s3boto.S3BotoStorage&#39;</code></pre></div>\n<p>Y ya podremos ejecutar con traquilidad</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python manage.py collectstatic</code></pre></div>","frontmatter":{"title":"Archivos estáticos en S3 con Django","date":"September 05, 2017","description":"Cómo utilizar AWS S3 para servir archivos estáticos con Django"}}},"pageContext":{"slug":"/179-archivos-estaticos-en-s3-con-django/","previous":{"fields":{"slug":"/178-postgresql-hoja-de-trucos/"},"frontmatter":{"title":"PostgreSQL Hoja de Trucos"}},"next":{"fields":{"slug":"/180-que-significan-los-tipos-de-registro-dns/"},"frontmatter":{"title":"¿Qué significan los tipos de registro DNS?"}}}}}