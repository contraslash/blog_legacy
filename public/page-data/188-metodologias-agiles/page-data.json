{"componentChunkName":"component---src-templates-blog-post-js","path":"/188-metodologias-agiles/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"61c457ab-2000-5d1b-a2e1-363399e4dcaa","excerpt":"Metodologías ágiles Las metodologías ágiles nacen como una alternativa a metodologías tradicionales. Las métodologías ágiles inician manejando proyectos…","html":"<h1>Metodologías ágiles</h1>\n<p>Las metodologías ágiles nacen como una alternativa a metodologías tradicionales.</p>\n<p>Las métodologías ágiles inician manejando proyectos pequeños, pero con el tiempo se dieron cuenta que es posible manejar proyectos de cualquier tamaño con técnicas ágiles.</p>\n<h2>Factores determinantes en el desarrollo de Software utilizando metodologías ágiles.</h2>\n<table>\n<thead>\n<tr>\n<th>Factores de éxito</th>\n<th>Factores de fracaso</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Participación de los usuarios</td>\n<td>Falta de participación de los usuarios</td>\n</tr>\n<tr>\n<td>Soporte de la administración ejecutiva</td>\n<td>Falta de apoyo</td>\n</tr>\n<tr>\n<td>Claridad en los requerimientos</td>\n<td>Requerimientos incompletos</td>\n</tr>\n<tr>\n<td>Planeación adecuada</td>\n<td>Falta de planeación</td>\n</tr>\n<tr>\n<td>Expectativa realísticas</td>\n<td>Expectativas no realísticas</td>\n</tr>\n<tr>\n<td>Entregas parciales</td>\n<td>Entregas muy grandes</td>\n</tr>\n<tr>\n<td>Claridad en ls objetivos</td>\n<td>Desconocimiento de la tecnología</td>\n</tr>\n<tr>\n<td>Trabajo duro</td>\n<td>Mínimo esfuerzo</td>\n</tr>\n</tbody>\n</table>\n<h2>Metodologías tradicionales</h2>\n<p>Metodologías en cascada</p>\n<ul>\n<li>RUP</li>\n<li>\n<p>Microsoft Software Foundation</p>\n<h2>Metodologías ágiles</h2>\n</li>\n</ul>\n<p>Busca aumentar el valor reduciendo el riesgo</p>\n<ul>\n<li>XP</li>\n<li>Scrump</li>\n<li>Crystal</li>\n<li>AgileUP (Agile unified Proces)</li>\n<li>DSDM </li>\n<li>FDD (Feature driven development)</li>\n</ul>\n<p><a href=\"http://agilemanifesto.org/\">Manifiesto ágil</a></p>\n<blockquote>\n<p>Vale mas un producto funcionando que una buena documentación</p>\n</blockquote>\n<h2>Fundamentos</h2>\n<ul>\n<li>\n<p>Valores</p>\n<ul>\n<li>Trabajar para los entregables</li>\n<li>Responder al cambio</li>\n<li>Colaboración con los clientes</li>\n</ul>\n</li>\n<li>\n<p>Principios</p>\n<ul>\n<li>Simplicidad</li>\n<li>Entregas frecuentes</li>\n<li>Excelencia técnica</li>\n<li>Trabajo en equipo</li>\n<li>Mejoramiento continuo</li>\n</ul>\n</li>\n<li>\n<p>Prácticas</p>\n<ul>\n<li>\n<p>Planeación</p>\n<ul>\n<li>Historias de usuario</li>\n<li>Reuniones diarias</li>\n<li>Plan de iteraciones</li>\n<li>Retrospectivas</li>\n<li>Release plan</li>\n<li>Planning Poker</li>\n</ul>\n</li>\n<li>\n<p>Desopliegue</p>\n<ul>\n<li>TDD</li>\n<li>Integración contínua</li>\n<li>Despliegues automáticos</li>\n<li>Diseño arquitectural</li>\n<li>Refactoring</li>\n<li>Spikes</li>\n<li>Propiedad colectiva del código</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>En el uso de metodologías ágiles según el Anual state of agile reporte del 2017 - versionone</p>\n<p>Metodologías usadas</p>\n<ul>\n<li>58% Scrum</li>\n<li>10% Scrum/XP Hybrids</li>\n<li>8% Custom Hybryd</li>\n<li>8% Scrumban</li>\n<li>5% Kanban</li>\n</ul>\n<p>Prácticas más usadas:</p>\n<ul>\n<li>90% Iteration planning</li>\n<li>88% Daily standup</li>\n<li>83% Retrospectives</li>\n<li>81% Iterations Reviews</li>\n<li>71% Short iterations</li>\n<li>66% Release planning</li>\n<li>62% Team based estimation</li>\n<li>55% Dedicated product owner</li>\n<li>54% Single team (integrated dev testing)</li>\n<li>50% Frequent releases</li>\n<li>50% Kanban </li>\n<li>45% Open work area</li>\n<li>38% Product roadmapping</li>\n<li>35% Story Mapping</li>\n<li>25% Agile portfolio planning</li>\n<li>22% Agile/lean UX</li>\n</ul>\n<p>Prácticas de Ingeniería</p>\n<ul>\n<li>74% Unit testing</li>\n<li>61% CI</li>\n<li>56% Coding standards</li>\n<li>52% Refactoring</li>\n<li>40% TDD</li>\n<li>36% Automated acceptance testing</li>\n</ul>\n<p>Causas de falla:</p>\n<ul>\n<li>46% Company Philosophy or culture at odds with core agile values</li>\n<li>41% Lack of experience with agile methods</li>\n<li>38% Lack of management support</li>\n<li>38% Lack of support for cultural transition</li>\n<li>38% Inconsistent agile practices and process</li>\n<li>36% External pressure to follow traditional methodologies</li>\n</ul>\n<p>Barreras para la adopción:</p>\n<ul>\n<li>55% Ability to change organizational culture</li>\n<li>42% General organizational resistance to change</li>\n<li>40% Pre existing rigind waterfall frameworks</li>\n</ul>\n<h2>Mitos comunes</h2>\n<ul>\n<li>Documentación pobre</li>\n<li>No planeación</li>\n<li>Anti arquitectura</li>\n<li>Alto riesgo</li>\n<li>No control de costo</li>\n<li>Mala calidad</li>\n</ul>\n<h2>Cómo adoptar estas métodologías?</h2>\n<ul>\n<li>Shu - Follow: Aprenda y practique las técnicas</li>\n<li>Ha -  Break Away: Colecciones técnicas adicionales</li>\n<li>Ri - Fluent: Mezcle y desarrolle nuevas ténicas</li>\n</ul>\n<blockquote>\n<p>Las metodologías ágiles nos ayudan a hacer gestión, control y seguimiento rápido de nuestros proyectos</p>\n</blockquote>\n<h2>Pasos para pasarse a ágil</h2>\n<ol>\n<li>Obtener soporte de la administración</li>\n<li>Trabajar en equipo</li>\n<li>Procurar la excelencia técnica  y la calidad del producto</li>\n<li>Automatizar las pruebas</li>\n<li>Mejoramiento continuo</li>\n</ol>\n<h2>Estrategias para corregir problemas</h2>\n<table>\n<thead>\n<tr>\n<th>Problema</th>\n<th>Solución ágil</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Calidad inadecuado</td>\n<td>Diseño simple, TDD, Integración contínua, Refactoring</td>\n</tr>\n<tr>\n<td>Nuevas funcionalidades que requieren mucho tiempo</td>\n<td>Spike, diseño simple, TDD, Integración Continua</td>\n</tr>\n<tr>\n<td>Funcionalidad no usuada por el cliente</td>\n<td>Colaboración con el cliente, Historias de usuario</td>\n</tr>\n<tr>\n<td>Costo de desarrollo muy alto</td>\n<td>Diseño simple, TDD, Refactoring</td>\n</tr>\n<tr>\n<td>Nuestro equipo Vs el Cliente</td>\n<td>Retrospectivas, Colaboración del cliente, Historias de Usuario</td>\n</tr>\n<tr>\n<td>El cliente quiere mas y mas cosas</td>\n<td>Colaboración con el cliente, Historias de Usuario</td>\n</tr>\n</tbody>\n</table>\n<h2>Beneficios de adoptar metodologías ágiles</h2>\n<ul>\n<li>Reducción  del tiempo de desarrollo y de los costos</li>\n<li>Mejoramiento continuo (Mejora la productividad)</li>\n<li>Mejora la transparencia (proyecto y visibilidad del proceso)</li>\n<li>Eficiencia en el manejo del cambio</li>\n<li>Lugares agradables para trabajar</li>\n</ul>\n<h2>Scrum</h2>\n<p>Scrum es un proceso en el que se aplican de manera regular un conjunto de buenas prácticas para trabajar colaborativamente, en equipo y obtener el mejor resultado posible del proyecto</p>\n<p>Las fases en las que se divide el slkdnsldgjnsdjgabkdja COMPLETAR</p>\n<h3>Roles del Scrum</h3>\n<ul>\n<li>Product Owner: Voz del cliente y el responsable de desarrollar, mantener y priorizar las tareas en el backlog</li>\n<li>Scrum Master: Es responsable de aseguurarse que el trabajo del equipo vaya bien siguiendo las bases de Scrum. Además se encarga de remover cualquier obstáculo que pueda encontrar el equipo</li>\n<li>Development Team: Miembros del equipo son los encargados de escribir y probar el código</li>\n</ul>\n<h3>Definiciones</h3>\n<ul>\n<li>Product Backlog: Lista ordenada, estimada y priorizada de las historias de usuario</li>\n<li>Punto de Scrum: Esfuerzo que se necesita para hacer algo</li>\n<li>Sprint backlog: Conjunto de historias de usuario que se van a desarrollar en un sprint. Cada uno debería durar entre 1 y 4 semanas. Al final de cada sprint se espera tener una pequeña entrega</li>\n<li>Proyecto: conjunto de varios sprints</li>\n<li>Burndown chart: gráfico para visualizar el crecimiento del proyecto en contra del decrecimiento de las historias de usuario</li>\n<li>Retrospectiva: Espacio de evaluación del Sprint. ¿Qué hicimos bien? ¿Qué hicimos mal? ¿Qué debemos mejorar?</li>\n<li>Entrega: Artefacto obtenido en la finalización de un sprint. Debe ser incremental. Se añaden nuevas funcionalidades y se mejoran características</li>\n<li>Equipo: Conjunto de personas que ejecutan un sprint. Deberían estar conformados entre 5 y 9 personas</li>\n<li>Tabla de Scrum:\nSprint|Historias de usuario|Puntos|Fecha de entrega|ResponsableEstado\n-|-\n1|7|4|12-12-2018|ma0|En proceso\n1|8|4|14-12-2018|andres|En proceso</li>\n</ul>","frontmatter":{"title":"Metodologías ágiles","date":"March 07, 2018","description":"Notas de clase Tendencias de Ingeniería de Software, donde se tocan temas importantes como Metodologías Ágiles, algunos mitos, las razones por las cuales se establecieron sobre las metodologías tradicionales y algunas definiciones puntuales sobre lo que es SCRUM"}}},"pageContext":{"slug":"/188-metodologias-agiles/","previous":{"fields":{"slug":"/187-pain-is-my-greatest-enemy/"},"frontmatter":{"title":"Pain is my greatest enemy"}},"next":{"fields":{"slug":"/189-tendencias-en-desarrollo-agil/"},"frontmatter":{"title":"Tendencias en desarrollo Ágil"}}}}}