{"componentChunkName":"component---src-templates-blog-post-js","path":"/204-modelo-de-programacion-orientada-a-objetos/","result":{"data":{"site":{"siteMetadata":{"title":"Blog de Contraslash (Legacy)"}},"markdownRemark":{"id":"bd84dc98-dc93-59be-8abd-22171ffd678f","excerpt":"Modelo de programación orientada a objetos El modelo de programación orientada a objetos no añade ningún concepto nuevo con respecto del modelo de programación…","html":"<h1>Modelo de programación orientada a objetos</h1>\n<p>El modelo de programación orientada a objetos no añade ningún concepto nuevo con respecto del modelo de programación con estado explícito.</p>\n<h2>Objeto</h2>\n<p>Se modela como un procedimiento con estado encapsulado</p>\n<h2>Clase</h2>\n<p>Un procedimiento que genera nuevas instancias de objetos</p>\n<h2>Herencia</h2>\n<p>Mecanismo por el cual se construyen clases a partir de clases existentes</p>\n<h2>Objetos activos</h2>\n<p>Objetos que se comunican por medio de puertos, añadiendo la concurrencia por paso de mensajes.</p>\n<h3>Información adicional</h3>\n<ul>\n<li>La ligadura estática permite que los métodos nuevos invoquen métodos antiguos cuando tengan que hacerlo</li>\n<li>La ligadura dinámica permite que los métodos antiguos invoquen métodos nuevos aunque estos aún no hayan sido creados.</li>\n<li>Las clases son un mecanismo sintáctico para implementar el concepto de herencia</li>\n<li>La herencia permite construir nuevos tipos de datos incrementalmente</li>\n<li>La abstracción permite crear nuevos tipos de datos completo</li>\n<li>La herencia está relacionada con el grafo de herencia, el control de encapsulación y el control de acceso</li>\n<li>La herencia no respeta las invariantes de clase por defecto</li>\n<li>El control de encapsulación limita el acceso a miembros de la clase.</li>\n<li>La herencia es definida sobre clases y el self no es común</li>\n<li>La delegación es definida sobre objetos y el self es común</li>\n<li>El reenveio es definido sobre objetos y el self no es común</li>\n<li>El grafo de herencia está relacionado con la función de anulación</li>\n</ul>","frontmatter":{"title":"Modelo de programación orientada a objetos","date":"June 08, 2018","description":"Modelo de programación orientada a objetos"}}},"pageContext":{"slug":"/204-modelo-de-programacion-orientada-a-objetos/","previous":{"fields":{"slug":"/203-modelo-de-programacion-con-estado/"},"frontmatter":{"title":"Modelo de programación con estado"}},"next":{"fields":{"slug":"/205-modelo-de-programacion-relacional/"},"frontmatter":{"title":"Modelo de programación relacional"}}}}}